// This is the default configuration file. Settings can be
// overidden by specifying them on a .conf file that is provided
// on the command line, or with command line parameters. This
// file is automatically included with the JAR and contains
// fallback settings. It should not be modified since it contains
// default values.

akka {
  loggers = [akka.event.slf4j.Slf4jLogger]
  loglevel = info
  log-dead-letters-during-shutdown = false

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  actor {
    // This is LocalActorRefProvider on purpose for unit tests.
    // Otherwise, tests clash when starting up new actor systems.
    // This can never be set to LocalActorRefProvider in production.
    // In fact, Boot ignores this setting and replaces it with "ClusterActorRefProvider".
    provider = "akka.actor.LocalActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${coral.akka.hostname}
      port = ${coral.akka.port}
    }
  }

  cluster {
    seed-nodes = ${coral.cluster.seed-nodes}

    auto-down-unreachable-after = 10s
    metrics {
      enabled = off
    }
  }
}

spray.servlet.boot-class = "io.coral.api.Boot"

cassandra-journal {
  keyspace = ${coral.cassandra.persistence.journal-keyspace}
  table = "journal"
  contact-points = ${coral.cassandra.contact-points}
  port = ${coral.cassandra.port}
  keyspace-autocreate = ${coral.cassandra.persistence.keyspace-autocreate}

  authentication {
    username = ${coral.cassandra.persistence.user}
    password = ${coral.cassandra.persistence.password}
  }
}

cassandra-snapshot-store {
  keyspace = ${coral.cassandra.persistence.snapshot-store-keyspace}
  table = "snapshots"
  contact-points = ${coral.cassandra.contact-points}
  port = ${coral.cassandra.port}
  keyspace-autocreate = ${coral.cassandra.persistence.keyspace-autocreate}

  authentication {
    username = ${coral.cassandra.persistence.user}
    password = ${coral.cassandra.persistence.password}
  }
}

kafka {
  consumer {
    consumer.timeout.ms = 500
    auto.commit.enable = false
  }

  producer {
    producer.type = async
  }
}

injections.actorPropFactories = [
  "io.coral.actors.DefaultActorPropFactory"
]

coral {
  log-level = INFO

  // The Spray.io HTTP interface
  api {
    interface = "0.0.0.0"
    port = 8000
  }

  akka {
    hostname: "127.0.0.1",
    port: 2551
  }

  distributor {
    mode = "round-robin"
  }

  // The default authentication mode is coral (internal)
  authentication {
    mode = "coral"
  }

  cassandra {
    persistence {
      journal-keyspace = ${coral.cassandra.keyspace}
      snapshot-store-keyspace = ${coral.cassandra.keyspace}
      journal-table = ${cassandra-journal.table}
      snapshot-table = ${cassandra-snapshot-store.table}
      user = ${coral.cassandra.user}
      password = ${coral.cassandra.password}

      keyspace-autocreate = true
    }

    contact-points = ["127.0.0.1"]
    port = 9042
    keyspace = "coral"
    user-table = "users"
    runtime-table = "runtimes"
    authorize-table = "auth"
    max-result-size = 50000
    user = "coral"
    password = "coral"
  }

  cluster {
    enable = true
  }
}

test {
  builder {
    someProperty = "someValue"
    anInteger = 3
  }
}
